const sqlite3 = require('sqlite3').verbose();

// Créer une nouvelle base de données ou ouvrir une existante
let db = new sqlite3.Database('./mydb.sqlite3', sqlite3.OPEN_READWRITE | sqlite3.OPEN_CREATE, (err) => {
    if (err) {
        console.error(err.message);
    }
    console.log('Connected to the mydb.sqlite database.');
});

// Modifier la table `users` pour inclure une colonne `avatar`
db.run(`CREATE TABLE IF NOT EXISTS users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    username TEXT UNIQUE NOT NULL,
    password TEXT NOT NULL,
    email TEXT UNIQUE NOT NULL,
    avatar TEXT
)`, (err) => {
    if (err) {
        return console.error(err.message);
    }
    console.log('Table `users` modified or already exists with an `avatar` column.');
});

// Créer une table `tasks`
db.run(`CREATE TABLE IF NOT EXISTS tasks (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    title TEXT NOT NULL,
    completed BOOLEAN NOT NULL DEFAULT 0,
    userId INTEGER,
    FOREIGN KEY (userId) REFERENCES users (id)
)`, (err) => {
    if (err) {
        return console.error(err.message);
    }
    console.log('Table `tasks` created or already exists.');
});

// Insérer un utilisateur exemple avec un avatar
db.run(`INSERT INTO users (username, password, email, avatar) VALUES (?, ?, ?, ?)`, ['user1', 'password1', 'user1@example.com', 'path/to/avatar/image.jpg'], function(err) {
    if (err) {
        return console.log(err.message);
    }
    console.log(`A user with an avatar has been inserted with rowid ${this.lastID}`);
});

// Insérer une tâche exemple, en supposant que l'utilisateur avec l'ID 1 existe
db.run(`INSERT INTO tasks (title, completed, userId) VALUES (?, ?, ?)`, ['Ma première tâche', false, 1], function(err) {
    if (err) {
        return console.log(err.message);
    }
    console.log(`A task has been inserted with rowid ${this.lastID}`);
});

// Fermer la base de données
db.close((err) => {
    if (err) {
        console.error(err.message);
    }
    console.log('Close the database connection.');
});
